<UserControl x:Class="CleanEstimate.View.LeistungenVIew"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:src="clr-namespace:CleanEstimate"
             xmlns:local="clr-namespace:CleanEstimate.View"
             xmlns:behavior="clr-namespace:CleanEstimate.Behavior"
             mc:Ignorable="d" 
             d:DesignHeight="300" Name="Self" d:DesignWidth="1024">
    <UserControl.Resources>
        <src:BindingProxy x:Key="ObjektProxy" Data="{Binding Path=Objekt}" />
    </UserControl.Resources>
    <DockPanel LastChildFill="True">
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem Content="{Binding Path=Objekt.Stunden, FallbackValue=0}" ContentStringFormat="Stunden Täglich: {0:F2}h"></StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right" Content="{Binding Path=Objekt.GesamtPreis, FallbackValue=0}" ContentStringFormat="Preis Monatlich: {0:C}"></StatusBarItem>
        </StatusBar>
        <DataGrid Name="dataGrid1" ItemsSource="{Binding Path=Objekt.LeistungenView}" SelectionMode="Single" SelectionUnit="FullRow" AutoGenerateColumns="False" AlternatingRowBackground="Gainsboro"
                          behavior:DataGridMouseDoubleClickBehavior.DoubleClickCommand="{Binding Path=DataContext.DataGridDoubleClickCommandLeistung, ElementName=Self}"  CanUserSortColumns="False" RowDetailsVisibilityMode="Visible">
            <DataGrid.Resources>
                <ContextMenu x:Key="cellContextMenu">
                    <MenuItem Header="Löschen" Command="{Binding Path=DataContext.LeistungDeleteCommand, RelativeSource={RelativeSource AncestorType={x:Type src:MainWindow}}}"/>
                </ContextMenu>

                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="ContextMenu" Value="{StaticResource cellContextMenu}" />
                    <Style.Triggers>
                        <Trigger  Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>

                <Style TargetType="{x:Type DataGridCell}" x:Key="DataGridCellCenter">
                    <Setter Property="TextBlock.TextAlignment" Value="Center" />
                    <Setter Property="ContextMenu" Value="{StaticResource cellContextMenu}" />
                    <Style.Triggers>
                        <Trigger  Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>

                <Style TargetType="{x:Type DataGridCell}" x:Key="DataGridCellCenterWrap">
                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <TextBlock TextWrapping="Wrap" Text="{Binding Path=Methode.Name}"></TextBlock>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="TextBlock.TextAlignment" Value="Center" />
                    <Setter Property="ContextMenu" Value="{StaticResource cellContextMenu}" />
                    <Style.Triggers>
                        <Trigger  Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>

                <Style TargetType="{x:Type DataGridCell}" x:Key="DataGridCellRight">
                    <Setter Property="TextBlock.TextAlignment" Value="Right" />
                    <Setter Property="ContextMenu" Value="{StaticResource cellContextMenu}" />
                    <Style.Triggers>
                        <Trigger  Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>

                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <TextBlock TextWrapping="Wrap" Text="{Binding}"></TextBlock>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style TargetType="DataGridRow">
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Etage" Binding="{Binding Path=Etage.Name}" Width="40" IsReadOnly="True"/>
                <DataGridTextColumn Header="Bezeichnung" Binding="{Binding Path=Bezeichnung.Name}" IsReadOnly="True" Width="*"/>
                <DataGridTextColumn Header="Belag" Binding="{Binding Path=Art.Name}" IsReadOnly="True" Width="100" CellStyle="{StaticResource DataGridCellCenter}"/>
                <DataGridTextColumn Header="Methode" IsReadOnly="True" Width="100" CellStyle="{StaticResource DataGridCellCenterWrap}"/>
                <DataGridTextColumn Header="Einheit" Binding="{Binding Path=Maenge.Name}" IsReadOnly="True" Width="80" CellStyle="{StaticResource DataGridCellCenter}"/>
                <DataGridTextColumn Header="Anzahl" Binding="{Binding Path=Anzahl, StringFormat={}{0:F2}}" IsReadOnly="True" Width="80" CellStyle="{StaticResource DataGridCellRight}"/>
                <DataGridTextColumn Header="Richtleistung" Binding="{Binding Path=RichtLeistung}" IsReadOnly="True" Width="80" CellStyle="{StaticResource DataGridCellRight}"/>
                <DataGridTextColumn Header="Häufigkeit"  Binding="{Binding Path=Haeufigkeit.Name}" IsReadOnly="True" Width="100" CellStyle="{StaticResource DataGridCellCenter}"/>
                <DataGridTextColumn Header="Anzahl Monatlich" Binding="{Binding Path=AnzahlMonatlich, StringFormat={}{0:F2}}" IsReadOnly="True" Width="80" CellStyle="{StaticResource DataGridCellRight}"/>
                <DataGridTextColumn Header="Ausführ-ungszeit [h]" Binding="{Binding Path=ZeitTaeglich, StringFormat={}{0:F3}}" IsReadOnly="True" Width="80" CellStyle="{StaticResource DataGridCellRight}"/>
                <DataGridTextColumn Header="Ausführ-ungszeit Monatlich [h]" Binding="{Binding Path=ZeitMonatlich, StringFormat={}{0:F2}}" IsReadOnly="True" Width="80" CellStyle="{StaticResource DataGridCellRight}"/>
                <DataGridTextColumn Header="Preis Monatlich" Binding="{Binding Path=Preis, StringFormat={}{0:C2}}" IsReadOnly="True" Width="80" CellStyle="{StaticResource DataGridCellRight}" />
            </DataGrid.Columns>
        </DataGrid>
    </DockPanel>
</UserControl>
