<UserControl x:Class="CleanEstimate.View.ObjektView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CleanEstimate.View"
             xmlns:src="clr-namespace:CleanEstimate"
             xmlns:behavior="clr-namespace:CleanEstimate.Behavior"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" Name="Self">
  <DataGrid Name="dataGrid1" ItemsSource="{Binding Path=Firma.ObjekteView}" SelectedItem="{Binding Path=SelectedItem}" SelectionMode="Single" SelectionUnit="FullRow" AutoGenerateColumns="False" AlternatingRowBackground="Gainsboro"
                          behavior:DataGridMouseDoubleClickBehavior.DoubleClickCommand="{Binding Path=DataContext.DataGridDoubleClickCommandObjekt, ElementName=Self}"  CanUserSortColumns="False" RowDetailsVisibilityMode="Visible">
    <DataGrid.Resources>
      <!--<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{x:Static SystemColors.HighlightColor}"/>
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="{x:Static SystemColors.HighlightTextColor}"/>-->

      <ContextMenu x:Key="cellContextMenu">
        <MenuItem Header="Löschen" Command="{Binding Path=DataContext.TransDeleteCommand, RelativeSource={RelativeSource AncestorType={x:Type src:MainWindow}}}"/>
      </ContextMenu>

      <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="ContextMenu" Value="{StaticResource cellContextMenu}" />
        <Style.Triggers>
          <Trigger  Property="IsSelected" Value="true">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
          </Trigger>
        </Style.Triggers>
      </Style>

      <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="ContentTemplate">
          <Setter.Value>
            <DataTemplate>
              <TextBlock TextWrapping="Wrap" Text="{Binding}"></TextBlock>
            </DataTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style TargetType="DataGridRow">
        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
      </Style>
    </DataGrid.Resources>
    <DataGrid.CellStyle>
      <!--Override Highlighting so that its easy to see what is selected even when the control is not focused-->
      <Style TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
          <Trigger  Property="IsSelected" Value="true">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
          </Trigger>
          <MultiDataTrigger>
            <MultiDataTrigger.Conditions>
              <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
              <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />
            </MultiDataTrigger.Conditions>
            <MultiDataTrigger.Setters>
              <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
              <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </MultiDataTrigger.Setters>
          </MultiDataTrigger>
        </Style.Triggers>
      </Style>
    </DataGrid.CellStyle>
    <DataGrid.Columns>
      <DataGridTextColumn Header="Objekt" Binding="{Binding Path=Name}" IsReadOnly="True"/>
      <DataGridTextColumn Header="Beschreibung" Binding="{Binding Path=Beschreibung}" IsReadOnly="True" Width="*"/>
      <DataGridTextColumn Header="Preis pro Jahr" Binding="{Binding Path=GesamtPreisJahr, StringFormat={}{0:C2}}" IsReadOnly="True" Width="100"/>
    </DataGrid.Columns>
  </DataGrid>
</UserControl>
